/**
 * UltraStar Wingman
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';
import ScoresModel from '../model/ScoresModel';
import SessionsListModel from '../model/SessionsListModel';

/**
* Scores service.
* @module api/ScoresApi
* @version 1.1.0
*/
export default class ScoresApi {

    /**
    * Constructs a new ScoresApi. 
    * @alias module:api/ScoresApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiScoresGetApiScoresGet operation.
     * @callback module:api/ScoresApi~apiScoresGetApiScoresGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScoresModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get session scores
     * Gets all the data for the specified session id.
     * @param {Object} opts Optional parameters
     * @param {Number} [sessionId] 
     * @param {module:api/ScoresApi~apiScoresGetApiScoresGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScoresModel}
     */
    apiScoresGetApiScoresGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'session_id': opts['sessionId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ScoresModel;
      return this.apiClient.callApi(
        '/api/scores', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiScoresGetApiScoresSessionIdGet operation.
     * @callback module:api/ScoresApi~apiScoresGetApiScoresSessionIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScoresModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get session scores
     * Gets all the data for the specified session id.
     * @param {Number} sessionId 
     * @param {module:api/ScoresApi~apiScoresGetApiScoresSessionIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScoresModel}
     */
    apiScoresGetApiScoresSessionIdGet(sessionId, callback) {
      let postBody = null;
      // verify the required parameter 'sessionId' is set
      if (sessionId === undefined || sessionId === null) {
        throw new Error("Missing the required parameter 'sessionId' when calling apiScoresGetApiScoresSessionIdGet");
      }

      let pathParams = {
        'session_id': sessionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ScoresModel;
      return this.apiClient.callApi(
        '/api/scores/{session_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSessionsGetApiSessionsGet operation.
     * @callback module:api/ScoresApi~apiSessionsGetApiSessionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SessionsListModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all sessions
     * Gets all the sessions.
     * @param {module:api/ScoresApi~apiSessionsGetApiSessionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SessionsListModel}
     */
    apiSessionsGetApiSessionsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SessionsListModel;
      return this.apiClient.callApi(
        '/api/sessions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
