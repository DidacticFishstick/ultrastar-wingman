/**
 * UltraStar Wingman
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The USDBSong model module.
 * @module model/USDBSong
 * @version 1.1.0
 */
class USDBSong {
    /**
     * Constructs a new <code>USDBSong</code>.
     * @alias module:model/USDBSong
     * @param artist {String} 
     * @param creator {String} 
     * @param downloaded {Boolean} 
     * @param edition {String} 
     * @param genre {String} 
     * @param golden {Boolean} 
     * @param id {String} 
     * @param language {String} 
     * @param rating {Number} 
     * @param title {String} 
     * @param views {Number} 
     * @param year {String} 
     */
    constructor(artist, creator, downloaded, edition, genre, golden, id, language, rating, title, views, year) { 
        
        USDBSong.initialize(this, artist, creator, downloaded, edition, genre, golden, id, language, rating, title, views, year);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, artist, creator, downloaded, edition, genre, golden, id, language, rating, title, views, year) { 
        obj['artist'] = artist;
        obj['creator'] = creator;
        obj['downloaded'] = downloaded;
        obj['edition'] = edition;
        obj['genre'] = genre;
        obj['golden'] = golden;
        obj['id'] = id;
        obj['language'] = language;
        obj['rating'] = rating;
        obj['title'] = title;
        obj['views'] = views;
        obj['year'] = year;
    }

    /**
     * Constructs a <code>USDBSong</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/USDBSong} obj Optional instance to populate.
     * @return {module:model/USDBSong} The populated <code>USDBSong</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new USDBSong();

            if (data.hasOwnProperty('artist')) {
                obj['artist'] = ApiClient.convertToType(data['artist'], 'String');
            }
            if (data.hasOwnProperty('creator')) {
                obj['creator'] = ApiClient.convertToType(data['creator'], 'String');
            }
            if (data.hasOwnProperty('downloaded')) {
                obj['downloaded'] = ApiClient.convertToType(data['downloaded'], 'Boolean');
            }
            if (data.hasOwnProperty('edition')) {
                obj['edition'] = ApiClient.convertToType(data['edition'], 'String');
            }
            if (data.hasOwnProperty('genre')) {
                obj['genre'] = ApiClient.convertToType(data['genre'], 'String');
            }
            if (data.hasOwnProperty('golden')) {
                obj['golden'] = ApiClient.convertToType(data['golden'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('views')) {
                obj['views'] = ApiClient.convertToType(data['views'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>USDBSong</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>USDBSong</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of USDBSong.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['artist'] && !(typeof data['artist'] === 'string' || data['artist'] instanceof String)) {
            throw new Error("Expected the field `artist` to be a primitive type in the JSON string but got " + data['artist']);
        }
        // ensure the json data is a string
        if (data['creator'] && !(typeof data['creator'] === 'string' || data['creator'] instanceof String)) {
            throw new Error("Expected the field `creator` to be a primitive type in the JSON string but got " + data['creator']);
        }
        // ensure the json data is a string
        if (data['edition'] && !(typeof data['edition'] === 'string' || data['edition'] instanceof String)) {
            throw new Error("Expected the field `edition` to be a primitive type in the JSON string but got " + data['edition']);
        }
        // ensure the json data is a string
        if (data['genre'] && !(typeof data['genre'] === 'string' || data['genre'] instanceof String)) {
            throw new Error("Expected the field `genre` to be a primitive type in the JSON string but got " + data['genre']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['year'] && !(typeof data['year'] === 'string' || data['year'] instanceof String)) {
            throw new Error("Expected the field `year` to be a primitive type in the JSON string but got " + data['year']);
        }

        return true;
    }


}

USDBSong.RequiredProperties = ["artist", "creator", "downloaded", "edition", "genre", "golden", "id", "language", "rating", "title", "views", "year"];

/**
 * @member {String} artist
 */
USDBSong.prototype['artist'] = undefined;

/**
 * @member {String} creator
 */
USDBSong.prototype['creator'] = undefined;

/**
 * @member {Boolean} downloaded
 */
USDBSong.prototype['downloaded'] = undefined;

/**
 * @member {String} edition
 */
USDBSong.prototype['edition'] = undefined;

/**
 * @member {String} genre
 */
USDBSong.prototype['genre'] = undefined;

/**
 * @member {Boolean} golden
 */
USDBSong.prototype['golden'] = undefined;

/**
 * @member {String} id
 */
USDBSong.prototype['id'] = undefined;

/**
 * @member {String} language
 */
USDBSong.prototype['language'] = undefined;

/**
 * @member {Number} rating
 */
USDBSong.prototype['rating'] = undefined;

/**
 * @member {String} title
 */
USDBSong.prototype['title'] = undefined;

/**
 * @member {Number} views
 */
USDBSong.prototype['views'] = undefined;

/**
 * @member {String} year
 */
USDBSong.prototype['year'] = undefined;






export default USDBSong;

